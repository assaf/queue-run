{"version":3,"sources":["src/createLambdaRole.ts"],"sourcesContent":["import type { Role } from \"@aws-sdk/client-iam\";\nimport { IAM } from \"@aws-sdk/client-iam\";\nimport { lambdaRolePath } from \"./constants\";\n\nconst Version = \"2012-10-17\";\n\nconst assumeRolePolicy = {\n  Version,\n  Statement: [\n    {\n      Effect: \"Allow\",\n      Principal: { Service: \"lambda.amazonaws.com\" },\n      Action: \"sts:AssumeRole\",\n    },\n  ],\n};\n\nconst loggingPolicy = {\n  Version,\n  Statement: [\n    {\n      Effect: \"Allow\",\n      Action: \"logs:CreateLogGroup\",\n      Resource: \"arn:aws:logs:us-east-1:122210178198:*\",\n    },\n    {\n      Effect: \"Allow\",\n      Action: [\"logs:CreateLogStream\", \"logs:PutLogEvents\"],\n      Resource: [\"arn:aws:logs:us-east-1:122210178198:log-group:/aws/lambda/*\"],\n    },\n  ],\n};\n\nconst sqsPolicy = {\n  Version,\n  Statement: [\n    {\n      Effect: \"Allow\",\n      Action: [\n        \"sqs:DeleteMessage\",\n        \"sqs:GetQueueAttributes\",\n        \"sqs:ReceiveMessage\",\n      ],\n      Resource: \"arn:aws:sqs:*\",\n    },\n  ],\n};\n\nexport default async function createLambdaRole({\n  lambdaName,\n  region,\n}: {\n  lambdaName: string;\n  region: string;\n}): Promise<Role> {\n  const iam = new IAM({ region });\n  const role = await upsertRole(iam, lambdaName);\n  await updatePolicies(iam, role, lambdaName);\n  return role;\n}\n\nasync function upsertRole(iam: IAM, lambdaName: string): Promise<Role> {\n  const roleName = `Lambda.${lambdaName}`;\n  const { Role: role } = await iam.getRole({ RoleName: roleName });\n  if (role) return role;\n\n  const { Role: newRole } = await iam.createRole({\n    Path: lambdaRolePath,\n    RoleName: roleName,\n    AssumeRolePolicyDocument: JSON.stringify(assumeRolePolicy),\n  });\n  if (!newRole) throw new Error(\"Failed to create role\");\n\n  console.info(\"λ: Created role %s\", roleName);\n  return newRole;\n}\n\nasync function updatePolicies(iam: IAM, role: Role, lambdaName: string) {\n  await updatePolicy(iam, role, \"Logging\", loggingPolicy);\n  await updatePolicy(iam, role, \"SQS\", {\n    ...sqsPolicy,\n    Statement: [\n      {\n        ...sqsPolicy.Statement[0],\n        Resource: `arn:aws:sqs:${lambdaName}__`,\n      },\n    ],\n  });\n}\n\nasync function updatePolicy(\n  iam: IAM,\n  role: Role,\n  policyName: string,\n  policy: unknown\n) {\n  await iam.putRolePolicy({\n    RoleName: role.RoleName,\n    PolicyName: policyName,\n    PolicyDocument: JSON.stringify(policy),\n  });\n  console.info(\"λ: Updated policy %s\", policyName);\n}\n"],"names":["createLambdaRole","Version","assumeRolePolicy","Statement","Effect","Principal","Service","Action","loggingPolicy","Resource","sqsPolicy","lambdaName","region","iam","role","upsertRole","updatePolicies","roleName","Role","getRole","RoleName","newRole","createRole","Path","AssumeRolePolicyDocument","JSON","stringify","Error","console","info","updatePolicy","policyName","policy","putRolePolicy","PolicyName","PolicyDocument"],"mappings":"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"}