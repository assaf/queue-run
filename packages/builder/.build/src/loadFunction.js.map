{"version":3,"sources":["src/loadFunction.ts"],"sourcesContent":["import chokidar from \"chokidar\";\nimport path from \"path\";\nimport loadModule from \"./loadModule\";\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype FunctionExports = { config: any; handler: any };\n\n// Load a single function.  In development mode, this also hot-reloads the function.\nexport default function loadFunction({\n  envVars,\n  filename,\n  watch,\n}: {\n  envVars: Record<string, string>;\n  filename: string;\n  watch: boolean;\n}): FunctionExports {\n  const paths = new Set<string>();\n  const exports = loadAndVerify({ envVars, filename, paths });\n\n  if (watch) {\n    const watcher = chokidar.watch(Array.from(paths), { ignoreInitial: true });\n    watcher.on(\"change\", (changed) => {\n      console.debug(\n        \"File %s changed => reloading %s\",\n        path.relative(process.cwd(), changed),\n        path.relative(process.cwd(), filename)\n      );\n\n      try {\n        Object.assign(exports, loadAndVerify({ envVars, filename, paths }));\n      } catch (error) {\n        console.error(\"Error loading %s\", filename, (error as Error).stack);\n      }\n      watcher.add(Array.from(paths));\n    });\n  }\n\n  return exports;\n}\n\nfunction loadAndVerify({\n  envVars,\n  filename,\n  paths,\n}: {\n  envVars: Record<string, string>;\n  filename: string;\n  paths: Set<string>;\n}): FunctionExports {\n  const cache = {};\n  try {\n    const { exports } = loadModule({ envVars, filename, cache });\n\n    const handler = exports.handler || exports.default;\n    if (typeof handler !== \"function\") {\n      throw new Error(`Expected ${filename} to export a function (default)`);\n    }\n\n    const config = exports.config || {};\n    if (typeof config !== \"object\") {\n      throw new Error(`Expected ${filename} to export an object (config)`);\n    }\n\n    return { config, handler };\n  } finally {\n    paths.clear();\n    Object.keys(cache).forEach((path) => paths.add(path));\n  }\n}\n"],"names":["loadFunction","envVars","filename","watch","paths","Set","exports","loadAndVerify","watcher","Array","from","ignoreInitial","on","changed","console","debug","relative","process","cwd","Object","assign","error","stack","add","cache","handler","default","Error","config","clear","keys","forEach","path"],"mappings":";;;;kBAQwBA,YAAY;AARf,GAAU,CAAV,SAAU;AACd,GAAM,CAAN,KAAM;AACA,GAAc,CAAd,WAAc;SAMbA,YAAY,CAAC,CAAC,CACpCC,OAAO,GACPC,QAAQ,GACRC,KAAK,EAKP,CAAC,EAAmB,CAAC;IACnB,KAAK,CAACC,KAAK,GAAG,GAAG,CAACC,GAAG;IACrB,KAAK,CAACC,OAAO,GAAGC,aAAa,CAAC,CAAC;QAACN,OAAO;QAAEC,QAAQ;QAAEE,KAAK;IAAC,CAAC;IAE1D,EAAE,EAAED,KAAK,EAAE,CAAC;QACV,KAAK,CAACK,OAAO,GArBI,SAAU,SAqBFL,KAAK,CAACM,KAAK,CAACC,IAAI,CAACN,KAAK,GAAG,CAAC;YAACO,aAAa,EAAE,IAAI;QAAC,CAAC;QACzEH,OAAO,CAACI,EAAE,CAAC,CAAQ,UAAGC,OAAO,GAAK,CAAC;YACjCC,OAAO,CAACC,KAAK,CACX,CAAiC,kCAvBxB,KAAM,SAwBVC,QAAQ,CAACC,OAAO,CAACC,GAAG,IAAIL,OAAO,GAxB3B,KAAM,SAyBVG,QAAQ,CAACC,OAAO,CAACC,GAAG,IAAIhB,QAAQ;YAGvC,GAAG,CAAC,CAAC;gBACHiB,MAAM,CAACC,MAAM,CAACd,OAAO,EAAEC,aAAa,CAAC,CAAC;oBAACN,OAAO;oBAAEC,QAAQ;oBAAEE,KAAK;gBAAC,CAAC;YACnE,CAAC,CAAC,KAAK,EAAEiB,KAAK,EAAE,CAAC;gBACfP,OAAO,CAACO,KAAK,CAAC,CAAkB,mBAAEnB,QAAQ,EAAGmB,KAAK,CAAWC,KAAK;YACpE,CAAC;YACDd,OAAO,CAACe,GAAG,CAACd,KAAK,CAACC,IAAI,CAACN,KAAK;QAC9B,CAAC;IACH,CAAC;IAED,MAAM,CAACE,OAAO;AAChB,CAAC;SAEQC,aAAa,CAAC,CAAC,CACtBN,OAAO,GACPC,QAAQ,GACRE,KAAK,EAKP,CAAC,EAAmB,CAAC;IACnB,KAAK,CAACoB,KAAK,GAAG,CAAC;IAAA,CAAC;IAChB,GAAG,CAAC,CAAC;QACH,KAAK,CAAC,CAAC,CAAClB,OAAO,EAAC,CAAC,OAlDE,WAAc,UAkDF,CAAC;YAACL,OAAO;YAAEC,QAAQ;YAAEsB,KAAK;QAAC,CAAC;QAE3D,KAAK,CAACC,OAAO,GAAGnB,OAAO,CAACmB,OAAO,IAAInB,OAAO,CAACoB,OAAO;QAClD,EAAE,EAAE,MAAM,CAACD,OAAO,KAAK,CAAU,WAC/B,KAAK,CAAC,GAAG,CAACE,KAAK,EAAE,SAAS,EAAEzB,QAAQ,CAAC,+BAA+B;QAGtE,KAAK,CAAC0B,MAAM,GAAGtB,OAAO,CAACsB,MAAM,IAAI,CAAC;QAAA,CAAC;QACnC,EAAE,EAAE,MAAM,CAACA,MAAM,KAAK,CAAQ,SAC5B,KAAK,CAAC,GAAG,CAACD,KAAK,EAAE,SAAS,EAAEzB,QAAQ,CAAC,6BAA6B;QAGpE,MAAM,CAAC,CAAC;YAAC0B,MAAM;YAAEH,OAAO;QAAC,CAAC;IAC5B,CAAC,QAAS,CAAC;QACTrB,KAAK,CAACyB,KAAK;QACXV,MAAM,CAACW,IAAI,CAACN,KAAK,EAAEO,OAAO,EAAEC,IAAI,GAAK5B,KAAK,CAACmB,GAAG,CAACS,IAAI;;IACrD,CAAC;AACH,CAAC"}