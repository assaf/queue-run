{"version":3,"sources":["src/deploy.ts"],"sourcesContent":["import ms from \"ms\";\nimport ow from \"ow\";\nimport { buildDir } from \"./constants\";\nimport createZip from \"./createZip\";\nimport fullBuild from \"./fullBuild\";\nimport { addTriggers, removeTriggers } from \"./lambdaTriggers\";\nimport loadEnvVars from \"./loadEnvVars\";\nimport loadGroup from \"./loadGroup\";\nimport { createQueues, deleteOldQueues } from \"./prepareQueues\";\nimport updateAlias from \"./updateAlias\";\nimport uploadLambda from \"./uploadLambda\";\n\nconst defaultRegion = \"us-east-1\";\n\nexport default async function deploy({\n  branch = \"main\",\n  projectId,\n  region = process.env.AWS_REGION ?? defaultRegion,\n  sourceDir = process.cwd(),\n}: {\n  branch?: string;\n  projectId: string;\n  region?: string;\n  sourceDir?: string;\n}) {\n  ow(\n    projectId,\n    ow.string.nonEmpty\n      .matches(/^([a-z0-9]+-){1,}[a-z0-9]+$/)\n      .message(\"Project ID must look like `grumpy-sunshine`\")\n  );\n  ow(\n    branch,\n    ow.string.nonEmpty\n      .matches(/^[a-z0-9-]+$/i)\n      .message(\"Branch name can only contain alphanumeric and hypen characters\")\n  );\n\n  const lambdaName = projectId;\n  const alias = `${lambdaName}-${branch}`;\n  const prefix = `${alias}__`;\n\n  const envVars = await loadEnvVars(sourceDir);\n  envVars.NODE_ENV = \"production\";\n\n  // Creating everything we need to zip\n  await fullBuild({\n    buildDir,\n    envVars,\n    install: true,\n    sourceDir,\n  });\n\n  // Sanity check on the source code, and we also need this info to configure\n  // queues, etc.  Note that full build also compiles TS, but doesn't load the\n  // module, so some code issues will only show at this point.\n  console.info(\"λ: Loading source code\");\n  const queues = await loadGroup({\n    dirname: buildDir,\n    envVars,\n    group: \"queue\",\n    watch: false,\n  });\n\n  const zip = await createZip(buildDir);\n  console.info(\"\");\n\n  const start = Date.now();\n  // Upload new Lambda function and publish a new version.\n  // This doesn't make any difference yet: event sources are tied to an alias,\n  // and the alias points to an earlier version (or no version on first deploy).\n  const { functionArn, version } = await uploadLambda({\n    envVars,\n    lambdaName,\n    zip,\n    region,\n  });\n  const aliasArn = `${functionArn}:${alias}`;\n\n  // Create queues that new version expects, and remove triggers for event\n  // sources that new version does not understand.\n  const queueArns = await createQueues({ configs: queues, prefix, region });\n  await removeTriggers({ lambdaName: aliasArn, sourceArns: queueArns, region });\n\n  // Update alias to point to new version.\n  //\n  // The alias includes the branch name, so if you parallel deploy in two\n  // branches, you would have two aliases pointing to two different published\n  // versions:\n  //\n  //    {projectId}-{branch} => {projectId}:{version}\n  await updateAlias({ alias, lambdaName, region, version });\n\n  // Add triggers for queues that new version can handle.  We do that for the\n  // alias, so we only need to add new triggers, existing triggers carry over:\n  //\n  //   trigger {projectId}-{branch}__{queueName} => {projectId}-{branch}\n  await addTriggers({ lambdaName: aliasArn, sourceArns: queueArns, region });\n  console.info(\"λ: Published version %s\", version);\n\n  // Delete any queues that are no longer needed.\n  await deleteOldQueues({ prefix, queueArns, region });\n  console.info(\"✨  Done in %s.\", ms(Date.now() - start));\n  console.info(\"\");\n}\n"],"names":["deploy","defaultRegion","branch","projectId","region","process","env","AWS_REGION","sourceDir","cwd","string","nonEmpty","matches","message","lambdaName","alias","prefix","envVars","NODE_ENV","buildDir","install","console","info","queues","dirname","group","watch","zip","start","Date","now","functionArn","version","aliasArn","queueArns","configs","sourceArns"],"mappings":"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"}