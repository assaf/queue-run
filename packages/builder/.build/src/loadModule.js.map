{"version":3,"sources":["src/loadModule.ts"],"sourcesContent":["import * as swc from \"@swc/core\";\nimport * as fs from \"fs\";\nimport * as path from \"path\";\nimport sourceMapSupport from \"source-map-support\";\nimport vm from \"vm\";\n\nconst globalRequire = require;\n\nconst sourceMaps = new Map<string, string>();\n\nsourceMapSupport.install({\n  environment: \"node\",\n  retrieveSourceMap: (filename) => {\n    const map = sourceMaps.get(filename);\n    return map ? { url: filename, map } : null;\n  },\n});\n\n// Half-assed implementatio of Node's require module loading that support hot reload.\nexport default function loadModule({\n  cache,\n  envVars,\n  filename,\n  parent,\n}: {\n  cache: NodeJS.Dict<NodeJS.Module>;\n  envVars: Record<string, string>;\n  filename: string;\n  parent?: NodeJS.Module;\n}): NodeJS.Module {\n  const require: NodeJS.Require = (id: string) => {\n    if (id.startsWith(\".\")) {\n      const child =\n        cache[id] ??\n        loadModule({\n          cache,\n          envVars,\n          filename: require.resolve(id),\n          parent: module,\n        });\n      if (!module.children.find(({ id }) => id === child.id))\n        module.children.push(child);\n      return child.exports;\n    } else {\n      const fromNodeModule = requireFromNodeModules(\n        filename,\n        require.resolve.paths(filename)\n      );\n      if (fromNodeModule) return fromNodeModule;\n      else return globalRequire(id);\n    }\n  };\n\n  require.cache = cache;\n  require.main = undefined;\n  require.extensions = {\n    ...globalRequire.extensions,\n    \".json\": (module: NodeJS.Module, filename: string) => {\n      module.exports.default = JSON.parse(\n        fs.readFileSync(require.resolve(filename), \"utf8\")\n      );\n    },\n    \".js\": compileSourceFile({ envVars, sourceMaps, syntax: \"ecmascript\" }),\n    \".ts\": compileSourceFile({ envVars, sourceMaps, syntax: \"typescript\" }),\n  };\n\n  const resolve: NodeJS.RequireResolve = (id: string) => {\n    const fullPath = path.resolve(path.dirname(module.filename), id);\n    const found = [\".ts\", \"/index.ts\", \".js\", \"/index.js\", \".json\", \"\"]\n      .map((ext) => `${fullPath}${ext}`)\n      .find((path) => fs.existsSync(path));\n    return found ?? globalRequire.resolve(id);\n  };\n  resolve.paths = (id) => nodeModulePaths(id);\n  require.resolve = resolve;\n\n  const module: NodeJS.Module = {\n    children: [],\n    exports: {},\n    filename,\n    id: filename,\n    isPreloading: false,\n    loaded: false,\n    parent,\n    path: path.dirname(filename),\n    paths: parent?.paths ?? globalRequire.resolve.paths(\"\") ?? [],\n    require,\n  };\n  cache[filename] = module;\n\n  const extension = require.extensions[path.extname(filename)];\n  if (extension) extension(module, filename);\n  module.loaded = true;\n  return module;\n}\n\nfunction requireFromNodeModules(filename: string, paths: string[] | null) {\n  if (!paths) return null;\n  const found = paths\n    .map((dir) => path.resolve(dir, filename))\n    .find((path) => fs.existsSync(path));\n  return found ? require(found) : null;\n}\n\nfunction nodeModulePaths(filename: string): string[] | null {\n  if (filename.startsWith(\".\")) return null;\n  const dirname = path.dirname(filename);\n  const paths = [];\n  if (fs.existsSync(path.resolve(dirname, \"package.json\")))\n    paths.push(path.resolve(dirname, \"node_modules\"));\n  if (dirname === \"/\" || dirname === process.cwd()) return paths;\n  const parent = nodeModulePaths(path.dirname(dirname));\n  return parent ? [...parent, ...paths] : paths;\n}\n\nfunction compileSourceFile({\n  envVars,\n  sourceMaps,\n  syntax,\n}: {\n  envVars: Record<string, string>;\n  sourceMaps: Map<string, string>;\n  syntax: \"typescript\" | \"ecmascript\";\n}) {\n  return (module: NodeJS.Module, filename: string) => {\n    const { code, map: sourceMap } = swc.transformFileSync(filename, {\n      envName: process.env.NODE_ENV,\n      env: { targets: { node: 14 } },\n      jsc: {\n        parser: { syntax },\n        transform: { optimizer: { globals: { vars: envVars } } },\n      },\n      sourceMaps: true,\n      module: { type: \"commonjs\", noInterop: true },\n    });\n    if (sourceMap) sourceMaps.set(filename, sourceMap);\n    vm.compileFunction(\n      code,\n      [\"exports\", \"require\", \"module\", \"__filename\", \"__dirname\"],\n      { filename }\n    )(module.exports, module.require, module, filename, path.dirname(filename));\n    module.loaded = true;\n  };\n}\n"],"names":["loadModule","swc","fs","path","globalRequire","require","sourceMaps","Map","install","environment","retrieveSourceMap","filename","map","get","url","cache","envVars","parent","id","startsWith","child","resolve","module","children","find","push","exports","fromNodeModule","requireFromNodeModules","paths","main","undefined","extensions","default","JSON","parse","readFileSync","compileSourceFile","syntax","fullPath","dirname","found","ext","existsSync","nodeModulePaths","isPreloading","loaded","extension","extname","dir","process","cwd","code","sourceMap","transformFileSync","envName","env","NODE_ENV","targets","node","jsc","parser","transform","optimizer","globals","vars","type","noInterop","set","compileFunction"],"mappings":";;;;kBAmBwBA,UAAU;AAnBtBC,GAAG,CAAHA,GAAG;AACHC,GAAE,CAAFA,EAAE;AACFC,GAAI,CAAJA,KAAI;AACa,GAAoB,CAApB,iBAAoB;AAClC,GAAI,CAAJ,GAAI;AAEnB,KAAK,CAACC,aAAa,GAAGC,OAAO;AAE7B,KAAK,CAACC,WAAU,GAAG,GAAG,CAACC,GAAG;AALG,iBAAoB,SAOhCC,OAAO,CAAC,CAAC;IACxBC,WAAW,EAAE,CAAM;IACnBC,iBAAiB,GAAGC,QAAQ,GAAK,CAAC;QAChC,KAAK,CAACC,GAAG,GAAGN,WAAU,CAACO,GAAG,CAACF,QAAQ;QACnC,MAAM,CAACC,GAAG,GAAG,CAAC;YAACE,GAAG,EAAEH,QAAQ;YAAEC,GAAG;QAAC,CAAC,GAAG,IAAI;IAC5C,CAAC;AACH,CAAC;SAGuBZ,UAAU,CAAC,CAAC,CAClCe,KAAK,GACLC,OAAO,GACPL,QAAQ,EAARA,SAAQ,GACRM,MAAM,EAMR,CAAC,EAAiB,CAAC;IACjB,KAAK,CAACZ,OAAO,IAAoBa,GAAU,GAAK,CAAC;QAC/C,EAAE,EAAEA,GAAE,CAACC,UAAU,CAAC,CAAG,KAAG,CAAC;YACvB,KAAK,CAACC,KAAK,GACTL,KAAK,CAACG,GAAE,KACRlB,UAAU,CAAC,CAAC;gBACVe,KAAK;gBACLC,OAAO;gBACPL,QAAQ,EAAEN,OAAO,CAACgB,OAAO,CAACH,GAAE;gBAC5BD,MAAM,EAAEK,OAAM;YAChB,CAAC;YACH,EAAE,GAAGA,OAAM,CAACC,QAAQ,CAACC,IAAI,EAAE,CAAC,CAACN,EAAE,EAAC,CAAC,GAAKA,EAAE,KAAKE,KAAK,CAACF,EAAE;eACnDI,OAAM,CAACC,QAAQ,CAACE,IAAI,CAACL,KAAK;YAC5B,MAAM,CAACA,KAAK,CAACM,OAAO;QACtB,CAAC,MAAM,CAAC;YACN,KAAK,CAACC,cAAc,GAAGC,sBAAsB,CAC3CjB,SAAQ,EACRN,OAAO,CAACgB,OAAO,CAACQ,KAAK,CAAClB,SAAQ;YAEhC,EAAE,EAAEgB,cAAc,EAAE,MAAM,CAACA,cAAc;iBACpC,MAAM,CAACvB,aAAa,CAACc,GAAE;QAC9B,CAAC;IACH,CAAC;IAEDb,OAAO,CAACU,KAAK,GAAGA,KAAK;IACrBV,OAAO,CAACyB,IAAI,GAAGC,SAAS;IACxB1B,OAAO,CAAC2B,UAAU,GAAG,CAAC;WACjB5B,aAAa,CAAC4B,UAAU;QAC3B,CAAO,SAAGV,MAAqB,EAAEX,QAAgB,GAAK,CAAC;YACrDW,MAAM,CAACI,OAAO,CAACO,OAAO,GAAGC,IAAI,CAACC,KAAK,CAzD7BjC,EAAE,CA0DHkC,YAAY,CAAC/B,OAAO,CAACgB,OAAO,CAACV,QAAQ,GAAG,CAAM;QAErD,CAAC;QACD,CAAK,MAAE0B,iBAAiB,CAAC,CAAC;YAACrB,OAAO;YAAEV,UAAU,EAAVA,WAAU;YAAEgC,MAAM,EAAE,CAAY;QAAC,CAAC;QACtE,CAAK,MAAED,iBAAiB,CAAC,CAAC;YAACrB,OAAO;YAAEV,UAAU,EAAVA,WAAU;YAAEgC,MAAM,EAAE,CAAY;QAAC,CAAC;IACxE,CAAC;IAED,KAAK,CAACjB,OAAO,IAA2BH,EAAU,GAAK,CAAC;QACtD,KAAK,CAACqB,QAAQ,GAjENpC,KAAI,CAiEUkB,OAAO,CAjErBlB,KAAI,CAiEuBqC,OAAO,CAAClB,OAAM,CAACX,QAAQ,GAAGO,EAAE;QAC/D,KAAK,CAACuB,KAAK,GAAG,CAAC;YAAA,CAAK;YAAE,CAAW;YAAE,CAAK;YAAE,CAAW;YAAE,CAAO;YAAE,CAAE;QAAA,CAAC,CAChE7B,GAAG,EAAE8B,GAAG,MAAQH,QAAQ,GAAGG,GAAG;UAC9BlB,IAAI,EAAErB,IAAI,GArELD,EAAE,CAqEWyC,UAAU,CAACxC,IAAI;;QACpC,MAAM,CAACsC,KAAK,IAAIrC,aAAa,CAACiB,OAAO,CAACH,EAAE;IAC1C,CAAC;IACDG,OAAO,CAACQ,KAAK,IAAIX,EAAE,GAAK0B,eAAe,CAAC1B,EAAE;;IAC1Cb,OAAO,CAACgB,OAAO,GAAGA,OAAO;IAEzB,KAAK,CAACC,OAAM,GAAkB,CAAC;QAC7BC,QAAQ,EAAE,CAAC,CAAC;QACZG,OAAO,EAAE,CAAC;QAAA,CAAC;QACXf,QAAQ,EAARA,SAAQ;QACRO,EAAE,EAAEP,SAAQ;QACZkC,YAAY,EAAE,KAAK;QACnBC,MAAM,EAAE,KAAK;QACb7B,MAAM;QACNd,IAAI,EAlFIA,KAAI,CAkFDqC,OAAO,CAAC7B,SAAQ;QAC3BkB,KAAK,IAAEZ,MAAM,aAANA,MAAM,KAANA,IAAI,CAAJA,CAAa,GAAbA,IAAI,CAAJA,CAAa,GAAbA,MAAM,CAAEY,KAAK,KAAIzB,aAAa,CAACiB,OAAO,CAACQ,KAAK,CAAC,CAAE,OAAK,CAAC,CAAC;QAC7DxB,OAAO;IACT,CAAC;IACDU,KAAK,CAACJ,SAAQ,IAAIW,OAAM;IAExB,KAAK,CAACyB,SAAS,GAAG1C,OAAO,CAAC2B,UAAU,CAxF1B7B,KAAI,CAwF4B6C,OAAO,CAACrC,SAAQ;IAC1D,EAAE,EAAEoC,SAAS,EAAEA,SAAS,CAACzB,OAAM,EAAEX,SAAQ;IACzCW,OAAM,CAACwB,MAAM,GAAG,IAAI;IACpB,MAAM,CAACxB,OAAM;AACf,CAAC;SAEQM,sBAAsB,CAACjB,QAAgB,EAAEkB,KAAsB,EAAE,CAAC;IACzE,EAAE,GAD8CA,KAAsB,EAC1D,MAAM,CAAC,IAAI;IACvB,KAAK,CAACY,KAAK,GAFqCZ,KAAsB,CAGnEjB,GAAG,EAAEqC,GAAG,GAjGD9C,KAAI,CAiGOkB,OAAO,CAAC4B,GAAG,EAAEtC,QAAQ;MACvCa,IAAI,EAAErB,IAAI,GAnGHD,EAAE,CAmGSyC,UAAU,CAACxC,IAAI;;IACpC,MAAM,CAACsC,KAAK,GAAGpC,OAAO,CAACoC,KAAK,IAAI,IAAI;AACtC,CAAC;SAEQG,eAAe,CAACjC,QAAgB,EAAmB,CAAC;IAC3D,EAAE,EADqBA,QAAgB,CAC1BQ,UAAU,CAAC,CAAG,KAAG,MAAM,CAAC,IAAI;IACzC,KAAK,CAACqB,OAAO,GAxGHrC,KAAI,CAwGOqC,OAAO,CAFL7B,QAAgB;IAGvC,KAAK,CAACkB,KAAK,GAAG,CAAC,CAAC;IAChB,EAAE,EA3GQ3B,EAAE,CA2GLyC,UAAU,CA1GPxC,KAAI,CA0GSkB,OAAO,CAACmB,OAAO,EAAE,CAAc,iBACpDX,KAAK,CAACJ,IAAI,CA3GFtB,KAAI,CA2GIkB,OAAO,CAACmB,OAAO,EAAE,CAAc;IACjD,EAAE,EAAEA,OAAO,KAAK,CAAG,MAAIA,OAAO,KAAKU,OAAO,CAACC,GAAG,IAAI,MAAM,CAACtB,KAAK;IAC9D,KAAK,CAACZ,MAAM,GAAG2B,eAAe,CA7GpBzC,KAAI,CA6GsBqC,OAAO,CAACA,OAAO;IACnD,MAAM,CAACvB,MAAM,GAAG,CAAC;WAAGA,MAAM;WAAKY,KAAK;IAAA,CAAC,GAAGA,KAAK;AAC/C,CAAC;SAEQQ,iBAAiB,CAAC,CAAC,CAC1BrB,OAAO,GACPV,UAAU,GACVgC,MAAM,EAKR,CAAC,EAAE,CAAC;IACF,MAAM,EAAEhB,MAAqB,EAAEX,QAAgB,GAAK,CAAC;QACnD,KAAK,CAAC,CAAC,CAACyC,IAAI,GAAExC,GAAG,EAAEyC,SAAS,EAAC,CAAC,GA7HtBpD,GAAG,CA6H0BqD,iBAAiB,CAAC3C,QAAQ,EAAE,CAAC;YAChE4C,OAAO,EAAEL,OAAO,CAACM,GAAG,CAACC,QAAQ;YAC7BD,GAAG,EAAE,CAAC;gBAACE,OAAO,EAAE,CAAC;oBAACC,IAAI,EAAE,EAAE;gBAAC,CAAC;YAAC,CAAC;YAC9BC,GAAG,EAAE,CAAC;gBACJC,MAAM,EAAE,CAAC;oBAACvB,MAAM;gBAAC,CAAC;gBAClBwB,SAAS,EAAE,CAAC;oBAACC,SAAS,EAAE,CAAC;wBAACC,OAAO,EAAE,CAAC;4BAACC,IAAI,EAAEjD,OAAO;wBAAC,CAAC;oBAAC,CAAC;gBAAC,CAAC;YAC1D,CAAC;YACDV,UAAU,EAAE,IAAI;YAChBgB,MAAM,EAAE,CAAC;gBAAC4C,IAAI,EAAE,CAAU;gBAAEC,SAAS,EAAE,IAAI;YAAC,CAAC;QAC/C,CAAC;QACD,EAAE,EAAEd,SAAS,EAAE/C,UAAU,CAAC8D,GAAG,CAACzD,QAAQ,EAAE0C,SAAS;QAnItC,GAAI,SAoIZgB,eAAe,CAChBjB,IAAI,EACJ,CAAC;YAAA,CAAS;YAAE,CAAS;YAAE,CAAQ;YAAE,CAAY;YAAE,CAAW;QAAA,CAAC,EAC3D,CAAC;YAACzC,QAAQ;QAAC,CAAC,EACZW,MAAM,CAACI,OAAO,EAAEJ,MAAM,CAACjB,OAAO,EAAEiB,MAAM,EAAEX,QAAQ,EA1I1CR,KAAI,CA0I6CqC,OAAO,CAAC7B,QAAQ;QACzEW,MAAM,CAACwB,MAAM,GAAG,IAAI;IACtB,CAAC;AACH,CAAC"}