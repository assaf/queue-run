{"version":3,"sources":["src/uploadLambda.ts"],"sourcesContent":["import { Lambda } from \"@aws-sdk/client-lambda\";\nimport { handler } from \"./constants\";\nimport createLambdaRole from \"./createLambdaRole\";\n\nexport default async function uploadLambda({\n  envVars,\n  lambdaName,\n  region,\n  zip,\n}: {\n  envVars: Record<string, string>;\n  lambdaName: string;\n  region: string;\n  zip: Uint8Array;\n}): Promise<{ functionArn: string; version: string }> {\n  const lambda = new Lambda({ region });\n  const { functionArn, revisionId } = await createOrUpdateLambda({\n    envVars,\n    lambda,\n    lambdaName,\n    region,\n    zip,\n  });\n  const version = await publishNewVersion({ lambda, lambdaName, revisionId });\n  return { functionArn, version };\n}\n\nasync function createOrUpdateLambda({\n  envVars,\n  lambda,\n  lambdaName,\n  region,\n  zip,\n}: {\n  envVars: Record<string, string>;\n  lambda: Lambda;\n  lambdaName: string;\n  region: string;\n  zip: Uint8Array;\n}): Promise<{\n  functionArn: string;\n  revisionId: string;\n}> {\n  try {\n    const { Configuration: existing } = await lambda.getFunction({\n      FunctionName: lambdaName,\n    });\n\n    if (existing) {\n      const newCode = await lambda.updateFunctionCode({\n        FunctionName: lambdaName,\n        Publish: false,\n        ZipFile: zip,\n        RevisionId: existing.RevisionId,\n      });\n      if (!newCode.RevisionId)\n        throw new Error(\"Could not update function with new code\");\n\n      const newCodeRevisionId = await waitForNewRevision({\n        lambda,\n        lambdaName,\n        revisionId: newCode.RevisionId,\n      });\n\n      const updated = await lambda.updateFunctionConfiguration({\n        Environment: { Variables: envVars },\n        FunctionName: lambdaName,\n        Handler: handler,\n        RevisionId: newCodeRevisionId,\n      });\n      if (!updated.RevisionId)\n        throw new Error(\"Could not update function with new configuration\");\n      const finalRevisionId = await waitForNewRevision({\n        lambda,\n        lambdaName,\n        revisionId: updated.RevisionId,\n      });\n\n      console.info(\"λ: Updated function %s\", lambdaName);\n      return { functionArn: updated.FunctionArn!, revisionId: finalRevisionId };\n    }\n  } catch (error) {\n    if (!(error instanceof Error && error.name === \"ResourceNotFoundException\"))\n      throw error;\n  }\n\n  const role = await createLambdaRole({\n    lambdaName,\n    region: lambda.config.region as string,\n  });\n  const newLambda = await lambda.createFunction({\n    Code: { ZipFile: zip },\n    Environment: { Variables: envVars },\n    FunctionName: lambdaName,\n    Handler: handler,\n    PackageType: \"Zip\",\n    Publish: false,\n    Role: role.Arn,\n    Runtime: \"nodejs14.x\",\n    TracingConfig: { Mode: \"Active\" },\n    Timeout: 300,\n  });\n  if (!newLambda.RevisionId) throw new Error(\"Could not create function\");\n\n  const finalRevisionId = await waitForNewRevision({\n    lambda,\n    lambdaName,\n    revisionId: newLambda.RevisionId,\n  });\n  console.info(\"λ: Created new function %s in %s\", lambdaName, region);\n  return { functionArn: newLambda.FunctionArn!, revisionId: finalRevisionId };\n}\n\nasync function waitForNewRevision({\n  lambda,\n  lambdaName,\n  revisionId,\n}: {\n  lambda: Lambda;\n  lambdaName: string;\n  revisionId: string;\n}): Promise<string> {\n  const { Configuration } = await lambda.getFunction({\n    FunctionName: lambdaName,\n  });\n  if (!Configuration?.RevisionId)\n    throw new Error(\"Could not get function configuration\");\n\n  if (Configuration.RevisionId === revisionId) {\n    await new Promise((resolve) => setTimeout(resolve, 500));\n    return await waitForNewRevision({ lambda, lambdaName, revisionId });\n  } else {\n    return Configuration.RevisionId;\n  }\n}\n\nasync function publishNewVersion({\n  lambda,\n  lambdaName,\n  revisionId,\n}: {\n  lambda: Lambda;\n  lambdaName: string;\n  revisionId: string;\n}): Promise<string> {\n  const { Version: version } = await lambda.publishVersion({\n    FunctionName: lambdaName,\n    RevisionId: revisionId,\n  });\n  if (!version) throw new Error(\"Could not publish function\");\n  return version;\n}\n"],"names":["uploadLambda","envVars","lambdaName","region","zip","lambda","functionArn","revisionId","createOrUpdateLambda","version","publishNewVersion","Configuration","existing","getFunction","FunctionName","newCode","updateFunctionCode","Publish","ZipFile","RevisionId","Error","newCodeRevisionId","waitForNewRevision","updated","updateFunctionConfiguration","Environment","Variables","Handler","finalRevisionId","console","info","FunctionArn","error","name","role","config","newLambda","createFunction","Code","PackageType","Role","Arn","Runtime","TracingConfig","Mode","Timeout","Promise","resolve","setTimeout","Version","publishVersion"],"mappings":"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"}