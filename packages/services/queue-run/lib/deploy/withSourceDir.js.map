{"version":3,"sources":["/Users/assaf/Projects/queue.run/packages/services/lib/deploy/withSourceDir.ts"],"sourcesContent":["import fs from \"fs/promises\";\nimport JSZip from \"jszip\";\nimport path from \"path\";\n\n// Explode the zip into a temporary directory (sourceDir), and run the build\n// function.\n//\n// Note that Lambda gives us about 512MB of storage in /tmp, and we need space\n// for both the source and the build. Since Lambda is limited to 250MB we should\n// have enough space to build the project. Important that we delete all tmp files\n// when we're done.\nexport default async function withBuildDirs<T>(\n  { archive, signal }: { archive: Buffer; signal: AbortSignal },\n  buildFn: (sourceDir: string) => Promise<T>\n): Promise<T> {\n  const sourceDir = await fs.mkdtemp(\"/tmp/source\");\n  try {\n    await explodeZip(archive, sourceDir);\n    if (signal.aborted) throw new Error();\n\n    return await buildFn(sourceDir);\n  } finally {\n    await fs.rm(sourceDir, { force: true, recursive: true });\n  }\n}\n\nasync function explodeZip(archive: Buffer, targetDir: string) {\n  const zip = new JSZip();\n  await zip.loadAsync(archive);\n  await Promise.all(\n    Object.entries(zip.files).map(async ([filename, file]) => {\n      const realpath = path.resolve(targetDir, filename);\n      if (file.dir) await fs.mkdir(realpath, { recursive: true });\n      else {\n        await fs.mkdir(path.dirname(realpath), { recursive: true });\n        await fs.writeFile(realpath, await file.async(\"nodebuffer\"));\n      }\n    })\n  );\n}\n"],"names":["withBuildDirs","archive","signal","buildFn","sourceDir","mkdtemp","explodeZip","aborted","Error","rm","force","recursive","targetDir","zip","loadAsync","Promise","all","Object","entries","files","map","filename","file","realpath","resolve","dir","mkdir","dirname","writeFile","async"],"mappings":";;;;kBAW8BA,aAAa;AAX5B,GAAa,CAAb,SAAa;AACV,GAAO,CAAP,MAAO;AACR,GAAM,CAAN,KAAM;;;;;;eASOA,aAAa,CACzC,CAAC,CAACC,OAAO,GAAEC,MAAM,EAA2C,CAAC,EAC7DC,OAA0C,EAC9B,CAAC;IACb,KAAK,CAACC,SAAS,GAAG,KAAK,CAfV,SAAa,SAeCC,OAAO,CAAC,CAAa;IAChD,GAAG,CAAC,CAAC;QACH,KAAK,CAACC,UAAU,CAACL,OAAO,EAAEG,SAAS;QACnC,EAAE,EAAEF,MAAM,CAACK,OAAO,EAAE,KAAK,CAAC,GAAG,CAACC,KAAK;QAEnC,MAAM,CAAC,KAAK,CAACL,OAAO,CAACC,SAAS;IAChC,CAAC,QAAS,CAAC;QACT,KAAK,CAtBM,SAAa,SAsBfK,EAAE,CAACL,SAAS,EAAE,CAAC;YAACM,KAAK,EAAE,IAAI;YAAEC,SAAS,EAAE,IAAI;QAAC,CAAC;IACzD,CAAC;AACH,CAAC;eAEcL,UAAU,CAACL,OAAe,EAAEW,SAAiB,EAAE,CAAC;IAC7D,KAAK,CAACC,GAAG,GAAG,GAAG,CA1BC,MAAO;IA2BvB,KAAK,CAACA,GAAG,CAACC,SAAS,CAACb,OAAO;IAC3B,KAAK,CAACc,OAAO,CAACC,GAAG,CACfC,MAAM,CAACC,OAAO,CAACL,GAAG,CAACM,KAAK,EAAEC,GAAG,SAASC,QAAQ,EAAEC,IAAI,IAAM,CAAC;QACzD,KAAK,CAACC,QAAQ,GA7BH,KAAM,SA6BKC,OAAO,CAACZ,SAAS,EAAES,QAAQ;QACjD,EAAE,EAAEC,IAAI,CAACG,GAAG,EAAE,KAAK,CAhCV,SAAa,SAgCCC,KAAK,CAACH,QAAQ,EAAE,CAAC;YAACZ,SAAS,EAAE,IAAI;QAAC,CAAC;aACrD,CAAC;YACJ,KAAK,CAlCE,SAAa,SAkCXe,KAAK,CAhCL,KAAM,SAgCKC,OAAO,CAACJ,QAAQ,GAAG,CAAC;gBAACZ,SAAS,EAAE,IAAI;YAAC,CAAC;YAC1D,KAAK,CAnCE,SAAa,SAmCXiB,SAAS,CAACL,QAAQ,EAAE,KAAK,CAACD,IAAI,CAACO,KAAK,CAAC,CAAY;QAC5D,CAAC;IACH,CAAC;AAEL,CAAC"}