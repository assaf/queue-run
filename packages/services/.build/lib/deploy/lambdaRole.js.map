{"version":3,"sources":["/Users/assaf/Projects/queue.run/packages/services/lib/deploy/lambdaRole.ts"],"sourcesContent":["import { IAM, Role } from \"@aws-sdk/client-iam\";\nimport invariant from \"tiny-invariant\";\n\nconst lambdaRolePath = \"/services/queuerun\";\n\nconst Version = \"2012-10-17\";\n\nconst assumeRolePolicy = {\n  Version,\n  Statement: [\n    {\n      Effect: \"Allow\",\n      Principal: { Service: \"lambda.amazonaws.com\" },\n      Action: \"sts:AssumeRole\",\n    },\n  ],\n};\n\nconst SQSPolicy = {\n  Version,\n  Statement: [\n    {\n      Effect: \"Allow\",\n      Action: [\n        \"sqs:ChangeMessageVisibility\",\n        \"sqs:ChangeMessageVisibilityBatch\",\n        \"sqs:DeleteMessage\",\n        \"sqs:GetQueueAttributes\",\n        \"sqs:GetQueueUrl\",\n        \"sqs:ReceiveMessage\",\n        \"sqs:SendMessage\",\n      ],\n      Resource: `arn:aws:sqs:*`,\n    },\n  ],\n};\n\nconst CloudWatchLogPolicy = {\n  Version,\n  Statement: [\n    {\n      Effect: \"Allow\",\n      Action: \"logs:CreateLogGroup\",\n      Resource: `arn:aws:logs:us-east-1:122210178198:/aws/lambda/*`,\n    },\n    {\n      Effect: \"Allow\",\n      Action: [\"logs:CreateLogStream\", \"logs:PutLogEvents\"],\n      Resource: [`arn:aws:logs:us-east-1:122210178198:log-group:/aws/lambda/*`],\n    },\n  ],\n};\n\n// Returns ARN for a role that only applies to the named function.\nexport async function getLambdaRole({\n  lambdaName,\n}: {\n  lambdaName: string;\n}): Promise<string> {\n  const iam = new IAM({});\n  const role = await upsertRole(iam, lambdaName);\n  invariant(role.Arn, \"Role has no ARN\");\n\n  await updatePolicies(iam, role);\n  return role.Arn;\n}\n\nasync function upsertRole(iam: IAM, lambdaName: string): Promise<Role> {\n  const roleName = lambdaName;\n  try {\n    const { Role: role } = await iam.getRole({ RoleName: roleName });\n    if (role) return role;\n  } catch (error) {\n    if (!(error instanceof Error && error.name === \"NoSuchEntity\")) throw error;\n  }\n\n  const { Role: newRole } = await iam.createRole({\n    Path: lambdaRolePath,\n    RoleName: roleName,\n    AssumeRolePolicyDocument: JSON.stringify(assumeRolePolicy),\n  });\n  invariant(newRole, \"Failed to create role\");\n\n  console.info(\"λ: Created role %s\", roleName);\n  return newRole;\n}\n\nasync function updatePolicies(iam: IAM, role: Role) {\n  await Promise.all([\n    updatePolicy(iam, role, \"CloudWatch\", CloudWatchLogPolicy),\n    updatePolicy(iam, role, \"SQS\", SQSPolicy),\n  ]);\n}\n\nasync function updatePolicy(\n  iam: IAM,\n  role: Role,\n  policyName: string,\n  policy: unknown\n) {\n  await iam.putRolePolicy({\n    RoleName: role.RoleName,\n    PolicyName: policyName,\n    PolicyDocument: JSON.stringify(policy),\n  });\n  console.info(\"λ: Updated policy %s\", policyName);\n}\n\nexport async function deleteLambdaRole({ lambdaName }: { lambdaName: string }) {\n  const iam = new IAM({});\n  await iam.deleteRole({\n    RoleName: lambdaName,\n  });\n}\n"],"names":["getLambdaRole","deleteLambdaRole","lambdaRolePath","Version","assumeRolePolicy","Statement","Effect","Principal","Service","Action","SQSPolicy","Resource","CloudWatchLogPolicy","lambdaName","iam","role","upsertRole","Arn","updatePolicies","roleName","Role","getRole","RoleName","error","Error","name","newRole","createRole","Path","AssumeRolePolicyDocument","JSON","stringify","console","info","Promise","all","updatePolicy","policyName","policy","putRolePolicy","PolicyName","PolicyDocument","deleteRole"],"mappings":"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"}