{"version":3,"sources":["/Users/assaf/Projects/queue.run/packages/services/lib/deploy/storage.ts"],"sourcesContent":["import { S3 } from \"@aws-sdk/client-s3\";\nimport { Readable } from \"stream\";\n\nconst s3 = new S3({});\n\nconst s3Bucket = \"queuerun-deploy-upload\";\n\nexport async function deleteS3Archive(deployId: string) {\n  await s3.deleteObject(objectKey(deployId));\n}\n\nexport async function readS3Archive(deployId: string): Promise<Buffer> {\n  const { Body } = await s3.getObject(objectKey(deployId));\n  const stream = Body as Readable;\n  const chunks: Buffer[] = [];\n  for await (const chunk of stream) chunks.push(chunk);\n  return Buffer.concat(chunks);\n}\n\nfunction objectKey(deployId: string) {\n  return {\n    Bucket: s3Bucket,\n    Key: deployId\n      .match(/^(.{4})(.*)$/)\n      .slice(1)\n      .join(\"/\"),\n  };\n}\n"],"names":["deleteS3Archive","readS3Archive","s3","s3Bucket","deployId","deleteObject","objectKey","Body","getObject","stream","chunks","chunk","push","Buffer","concat","Bucket","Key","match","slice","join"],"mappings":";;;;QAOsBA,eAAe,GAAfA,eAAe;QAIfC,aAAa,GAAbA,aAAa;AAXhB,GAAoB,CAApB,SAAoB;AAGvC,KAAK,CAACC,EAAE,GAAG,GAAG,CAHK,SAAoB,IAGrB,CAAC;AAAA,CAAC;AAEpB,KAAK,CAACC,QAAQ,GAAG,CAAwB;eAEnBH,eAAe,CAACI,QAAgB,EAAE,CAAC;IACvD,KAAK,CAACF,EAAE,CAACG,YAAY,CAACC,SAAS,CAACF,QAAQ;AAC1C,CAAC;eAEqBH,aAAa,CAACG,QAAgB,EAAmB,CAAC;IACtE,KAAK,CAAC,CAAC,CAACG,IAAI,EAAC,CAAC,GAAG,KAAK,CAACL,EAAE,CAACM,SAAS,CAACF,SAAS,CAACF,QAAQ;IACtD,KAAK,CAACK,MAAM,GAAGF,IAAI;IACnB,KAAK,CAACG,MAAM,GAAa,CAAC,CAAC;IAC3B,GAAG,QAAQ,KAAK,CAACC,KAAK,IAAIF,MAAM,CAAEC,MAAM,CAACE,IAAI,CAACD,KAAK;IACnD,MAAM,CAACE,MAAM,CAACC,MAAM,CAACJ,MAAM;AAC7B,CAAC;SAEQJ,SAAS,CAACF,QAAgB,EAAE,CAAC;IACpC,MAAM,CAAC,CAAC;QACNW,MAAM,EAAEZ,QAAQ;QAChBa,GAAG,EAAEZ,QAAQ,CACVa,KAAK,iBACLC,KAAK,CAAC,CAAC,EACPC,IAAI,CAAC,CAAG;IACb,CAAC;AACH,CAAC"}