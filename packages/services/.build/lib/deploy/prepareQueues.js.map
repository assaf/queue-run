{"version":3,"sources":["/Users/assaf/Projects/queue.run/packages/services/lib/deploy/prepareQueues.ts"],"sourcesContent":["import { SQS } from \"@aws-sdk/client-sqs\";\nimport { URL } from \"url\";\n\nexport async function createQueues({\n  prefix,\n  queues,\n  queueTimeout,\n}: {\n  prefix: string;\n  queues: string[];\n  queueTimeout: number;\n}): Promise<string[]> {\n  const sqs = new SQS({});\n  return await Promise.all(\n    queues.map(async (name) => {\n      // createQueue is idempotent so we can safely call it on each deploy.\n      // However, createQueue fails if the queue already exists, but with\n      // different attributes, so we split createQueue and setQueueAttributes\n      // into two separate calls.\n      const isFifo = name.endsWith(\".fifo\");\n      const { QueueUrl: queueURL } = await sqs.createQueue({\n        QueueName: `${prefix}${name}`,\n        Attributes: {\n          ...(isFifo\n            ? {\n                ContentBasedDeduplication: \"true\",\n                DeduplicationScope: \"messageGroupId\",\n                FifoQueue: \"true\",\n                FifoThroughputLimit: \"perMessageGroupId\",\n              }\n            : undefined),\n        },\n      });\n      if (!queueURL) throw new Error(`Could not create queue ${name}`);\n\n      await sqs.setQueueAttributes({\n        QueueUrl: queueURL,\n        Attributes: {\n          VisibilityTimeout: queueTimeout.toFixed(0),\n        },\n      });\n\n      return arnFromQueueURL(queueURL);\n    })\n  );\n}\n\nexport async function deleteOldQueues({\n  prefix,\n  queueARNs,\n}: {\n  prefix: string;\n  queueARNs: string[];\n}) {\n  const sqs = new SQS({});\n  const { QueueUrls: queueURLs } = await sqs.listQueues({\n    QueueNamePrefix: prefix,\n  });\n  if (!queueURLs) return;\n\n  const set = new Set(queueARNs);\n  const toDelete = queueURLs.filter((url) => !set.has(arnFromQueueURL(url)));\n  await Promise.all(\n    toDelete.map(async (url) => {\n      console.info(\"Âµ: Deleting old queue %s\", nameFromQueueURL(url));\n      await sqs.deleteQueue({ QueueUrl: url });\n    })\n  );\n}\n\nfunction arnFromQueueURL(queueURL: string): string {\n  // Looks like https://sqs.{region}.amazonaws.com/{accountId}/{queueName}\n  const { hostname, pathname } = new URL(queueURL);\n  const region = hostname.match(/^sqs\\.(.+?)\\.amazonaws\\.com/)?.[1];\n  const [accountId, name] = pathname.split(\"/\").slice(1);\n  return `arn:aws:sqs:${region}:${accountId}:${name}`;\n}\n\nfunction nameFromQueueURL(queueURL: string): string {\n  // Looks like https://sqs.{region}.amazonaws.com/{accountId}/{queueName}\n  const { pathname } = new URL(queueURL);\n  return pathname.split(\"/\")[2];\n}\n"],"names":["createQueues","deleteOldQueues","prefix","queues","queueTimeout","sqs","Promise","all","map","name","isFifo","endsWith","QueueUrl","queueURL","createQueue","QueueName","Attributes","ContentBasedDeduplication","DeduplicationScope","FifoQueue","FifoThroughputLimit","undefined","Error","setQueueAttributes","VisibilityTimeout","toFixed","arnFromQueueURL","queueARNs","QueueUrls","queueURLs","listQueues","QueueNamePrefix","set","Set","toDelete","filter","url","has","console","info","nameFromQueueURL","deleteQueue","hostname","pathname","region","match","accountId","split","slice"],"mappings":"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"}